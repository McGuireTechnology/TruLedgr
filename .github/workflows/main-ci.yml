name: Main Branch CI

on:
  push:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend tests (Python)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit
        run: |
          pre-commit run --all-files
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Cache Poetry and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml','**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: |
          cd api
          poetry install --no-interaction
      - name: Lint (ruff)
        run: |
          cd api
          poetry run ruff check .
      - name: Format check (black)
        run: |
          cd api
          poetry run black --check .
      - name: Run tests
        run: |
          cd api
          poetry run pytest -q --maxfail=1 --cov=api --cov-report=xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage-xml
          path: api/coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./api/coverage.xml

  precommit-setup:
    name: Pre-commit setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install python and pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Check poetry.lock consistency
        run: |
          cd api || true
          poetry lock --check || (echo "poetry.lock out of date; regenerate locally and commit" && exit 1)
      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
            .cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-
      - name: Install pre-commit hooks
        run: |
          pre-commit install --install-hooks

  dashboard-tests:
    name: Dashboard tests (Node)
    runs-on: ubuntu-latest
    needs: precommit-setup
    steps:
      - uses: actions/checkout@v4
      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('dashboard/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install and test
        run: |
          cd dashboard
          npm ci
          npm run lint || true
          npm run test

  # landing-tests removed â€” landing site retired in favor of mkdocs at project root
